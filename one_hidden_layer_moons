{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "#!/usr/bin/env python3\n",
    "# -*- coding: utf-8 -*-"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Image Processing with Neural Network\n",
    "## Template 01\n",
    "\n",
    "## Template with helper functions\n",
    "\n",
    "- Moons Dataset\n",
    "- Decision Boundary\n",
    "- Loss curve\n",
    "\n",
    "<img src='../../../images/prasami_color_tutorials_small.png' width='400' alt=\"By Pramod Sharma : pramod.sharma@prasami.com\" align = \"left\"/>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Import Statements"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "###-----------------\n",
    "### Import Libraries\n",
    "###-----------------\n",
    "\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "import seaborn as sns\n",
    "\n",
    "from sklearn import datasets\n",
    "\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.metrics import accuracy_score, confusion_matrix, ConfusionMatrixDisplay\n",
    " \n",
    "#from utils.helper import fn_plot_decision_boundary # this function is from helper.py"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "#print (fn_plot_decision_boundary.__doc__)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Setup Global Parameters"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "###----------------\n",
    "### Some parameters\n",
    "###----------------\n",
    "\n",
    "RANDOM_STATE = 24 # REMEMBER: to remove at the time of promotion to production\n",
    "np.random.seed(RANDOM_STATE)\n",
    "rng = np.random.default_rng(seed = RANDOM_STATE) # Set Random Seed for reproducible  results\n",
    "\n",
    "NOISE = 0.2\n",
    "EPOCHS = 20000  # number of epochs\n",
    "ALPHA = 0.1  # learning rate\n",
    "N_SAMPLES = 1000\n",
    "\n",
    "# parameters for Matplotlib\n",
    "params = {'legend.fontsize': 'medium',\n",
    "          'figure.figsize': (15, 6),\n",
    "          'axes.labelsize': 'large',\n",
    "          'axes.titlesize':'large',\n",
    "          'xtick.labelsize':'large',\n",
    "          'ytick.labelsize':'large'\n",
    "         }\n",
    "\n",
    "plt.rcParams.update(params)\n",
    "\n",
    "CMAP = plt.cm.coolwarm\n",
    "plt.style.use('seaborn-v0_8-darkgrid') # plt.style.use('ggplot')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "def fn_plot_decision_boundary(predict,X,wts):\n",
    "    \n",
    "    # initialize the figure\n",
    "    fig, ax = plt.subplots(figsize = (8,5));\n",
    "    \n",
    "    # Small increment to create object function surface\n",
    "    dm = 0.01\n",
    "    \n",
    "    # Range of X values (First feature)\n",
    "    x_min, x_max = X[:, 0].min() - 0.5, X[:, 0].max() + 0.5\n",
    "    \n",
    "    # Range of Y values (Second feature)\n",
    "    y_min, y_max = X[:, 1].min() - 0.5, X[:, 1].max() + 0.5\n",
    "    \n",
    "    # Create a grid to evaluate the object function\n",
    "    xx, yy = np.meshgrid(np.arange(x_min, x_max, dm),\n",
    "                         np.arange(y_min, y_max, dm))\n",
    "    \n",
    "    # flatten and stack\n",
    "    # arrays will be stacked along their last axis after being upgraded to at least 2-D \n",
    "    # with 1â€™s post-pended to the shape (column vectors made out of 1-D arrays)\n",
    "    XX = np.c_[xx.ravel(), yy.ravel()] \n",
    "\n",
    "    # add another column filled with 1 to make it work with the predict function\n",
    "    XX = np.hstack( ( XX, np.ones((XX.shape[0],1)) ) )\n",
    "    \n",
    "    \n",
    "    # list to collect predictions\n",
    "    Z = predict(XX)\n",
    "    \n",
    "    # Iterate over rows\n",
    "    for row in (XX):\n",
    "        \n",
    "        ###change for sigmoid function\n",
    "        #--------------------------------\n",
    "        a=predict(row, wts) # this is a float between [0,1]\n",
    "        y_p =0\n",
    "        if y_p>=0.5:\n",
    "            y_p=1\n",
    "\n",
    "        y_p = predict(row, wts)\n",
    "        y_pred.append(y_p)\n",
    "        #--------------------------------------------\n",
    "    Z = np.array(y_pred).reshape(xx.shape)\n",
    "\n",
    "    ax.contourf(xx, yy, Z, alpha=0.6, cmap=plt.cm.Paired)\n",
    "    ax.scatter(X[:, 0], X[:, 1], c=y,\n",
    "                                  s=20, edgecolor='k', cmap=plt.cm.bwr)\n",
    "    ax.set_title('Decision Boundary')\n",
    "\n",
    "    ax.set_xlabel('A')\n",
    "    ax.set_ylabel('B')\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Generate Data Set\n",
    "<div style=\"font-family: Arial; font-size:1.2em;color:black;\">\n",
    "Sklearn's dataset generator is good source of data for learning. To keep the example simple, I'll suggest  <a href=\"http://scikit-learn.org/stable/modules/generated/sklearn.datasets.make_moons.html\">make_moon</a> dataset generator.\n",
    "</div>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([[ 0.90633951,  0.90267624],\n",
       "        [-1.11536828,  0.75579289],\n",
       "        [ 1.88769158,  0.4175967 ],\n",
       "        [-0.93345034, -0.02299851],\n",
       "        [-0.96872877,  0.06396285]]),\n",
       " array([0, 0, 1, 0, 0], dtype=int64))"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X,y=datasets.make_moons(n_samples=N_SAMPLES,\n",
    "                        noise=NOISE,\n",
    "                        shuffle=True,\n",
    "                        random_state= RANDOM_STATE)\n",
    "\n",
    "X[:5],y[:5]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>A</th>\n",
       "      <th>B</th>\n",
       "      <th>target</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.906340</td>\n",
       "      <td>0.902676</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>-1.115368</td>\n",
       "      <td>0.755793</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1.887692</td>\n",
       "      <td>0.417597</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>-0.933450</td>\n",
       "      <td>-0.022999</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>-0.968729</td>\n",
       "      <td>0.063963</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          A         B  target\n",
       "0  0.906340  0.902676       0\n",
       "1 -1.115368  0.755793       0\n",
       "2  1.887692  0.417597       1\n",
       "3 -0.933450 -0.022999       0\n",
       "4 -0.968729  0.063963       0"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_df= pd.DataFrame(X,columns=['A','B'])\n",
    "data_df['target']=y\n",
    "data_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1000 entries, 0 to 999\n",
      "Data columns (total 3 columns):\n",
      " #   Column  Non-Null Count  Dtype  \n",
      "---  ------  --------------  -----  \n",
      " 0   A       1000 non-null   float64\n",
      " 1   B       1000 non-null   float64\n",
      " 2   target  1000 non-null   int64  \n",
      "dtypes: float64(2), int64(1)\n",
      "memory usage: 23.6 KB\n"
     ]
    }
   ],
   "source": [
    "data_df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>A</th>\n",
       "      <th>B</th>\n",
       "      <th>target</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1000.000000</td>\n",
       "      <td>1000.000000</td>\n",
       "      <td>1000.00000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>0.490841</td>\n",
       "      <td>0.239025</td>\n",
       "      <td>0.50000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.898951</td>\n",
       "      <td>0.540082</td>\n",
       "      <td>0.50025</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>-1.688795</td>\n",
       "      <td>-0.955280</td>\n",
       "      <td>0.00000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>-0.149565</td>\n",
       "      <td>-0.205090</td>\n",
       "      <td>0.00000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>0.500100</td>\n",
       "      <td>0.241163</td>\n",
       "      <td>0.50000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>1.095048</td>\n",
       "      <td>0.680394</td>\n",
       "      <td>1.00000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>2.419113</td>\n",
       "      <td>1.612075</td>\n",
       "      <td>1.00000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                 A            B      target\n",
       "count  1000.000000  1000.000000  1000.00000\n",
       "mean      0.490841     0.239025     0.50000\n",
       "std       0.898951     0.540082     0.50025\n",
       "min      -1.688795    -0.955280     0.00000\n",
       "25%      -0.149565    -0.205090     0.00000\n",
       "50%       0.500100     0.241163     0.50000\n",
       "75%       1.095048     0.680394     1.00000\n",
       "max       2.419113     1.612075     1.00000"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 1], dtype=int64)"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_df.target.unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1500x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots() # Instantiate\n",
    "    \n",
    "data_df['target'].value_counts().plot(ax=ax, kind='bar');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1500x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ax = sns.scatterplot(data=data_df, \n",
    "                     x='A', y='B', \n",
    "                     hue='target');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([[ 0.90633951,  0.90267624],\n",
       "        [-1.11536828,  0.75579289],\n",
       "        [ 1.88769158,  0.4175967 ],\n",
       "        [-0.93345034, -0.02299851],\n",
       "        [-0.96872877,  0.06396285]]),\n",
       " array([0, 0, 1, 0, 0], dtype=int64))"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X, y = datasets.make_moons(n_samples=N_SAMPLES, \n",
    "                           shuffle=True, \n",
    "                           noise=NOISE, \n",
    "                           random_state=RANDOM_STATE)\n",
    "X[:5], y[:5]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Visualization\n",
    "<p style=\"font-family: Arial; font-size:1.2em;color:black;\">\n",
    "DataFrames are easier to visualize\n",
    "</p>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>A</th>\n",
       "      <th>B</th>\n",
       "      <th>target</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.906340</td>\n",
       "      <td>0.902676</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>-1.115368</td>\n",
       "      <td>0.755793</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1.887692</td>\n",
       "      <td>0.417597</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>-0.933450</td>\n",
       "      <td>-0.022999</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>-0.968729</td>\n",
       "      <td>0.063963</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          A         B  target\n",
       "0  0.906340  0.902676       0\n",
       "1 -1.115368  0.755793       0\n",
       "2  1.887692  0.417597       1\n",
       "3 -0.933450 -0.022999       0\n",
       "4 -0.968729  0.063963       0"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_df = pd.DataFrame(X, columns = ['A', 'B'])\n",
    "\n",
    "data_df['target'] = y\n",
    "\n",
    "data_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1000 entries, 0 to 999\n",
      "Data columns (total 3 columns):\n",
      " #   Column  Non-Null Count  Dtype  \n",
      "---  ------  --------------  -----  \n",
      " 0   A       1000 non-null   float64\n",
      " 1   B       1000 non-null   float64\n",
      " 2   target  1000 non-null   int64  \n",
      "dtypes: float64(2), int64(1)\n",
      "memory usage: 23.6 KB\n"
     ]
    }
   ],
   "source": [
    "data_df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>A</th>\n",
       "      <th>B</th>\n",
       "      <th>target</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1000.000000</td>\n",
       "      <td>1000.000000</td>\n",
       "      <td>1000.00000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>0.490841</td>\n",
       "      <td>0.239025</td>\n",
       "      <td>0.50000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.898951</td>\n",
       "      <td>0.540082</td>\n",
       "      <td>0.50025</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>-1.688795</td>\n",
       "      <td>-0.955280</td>\n",
       "      <td>0.00000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>-0.149565</td>\n",
       "      <td>-0.205090</td>\n",
       "      <td>0.00000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>0.500100</td>\n",
       "      <td>0.241163</td>\n",
       "      <td>0.50000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>1.095048</td>\n",
       "      <td>0.680394</td>\n",
       "      <td>1.00000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>2.419113</td>\n",
       "      <td>1.612075</td>\n",
       "      <td>1.00000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                 A            B      target\n",
       "count  1000.000000  1000.000000  1000.00000\n",
       "mean      0.490841     0.239025     0.50000\n",
       "std       0.898951     0.540082     0.50025\n",
       "min      -1.688795    -0.955280     0.00000\n",
       "25%      -0.149565    -0.205090     0.00000\n",
       "50%       0.500100     0.241163     0.50000\n",
       "75%       1.095048     0.680394     1.00000\n",
       "max       2.419113     1.612075     1.00000"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_df.describe() # Generate descriptive statistic"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 1], dtype=int64)"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# what labels are present?\n",
    "data_df.target.unique()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Different ways of plotting data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "((900, 3), (100, 3))"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_train = data_df[:900].to_numpy()\n",
    "data_test = data_df[900:].to_numpy()\n",
    "data_train.shape,data_test.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [],
   "source": [
    "TEST_SIZE =0.2\n",
    "X_train, X_test, y_train , y_test = train_test_split(X,y,\n",
    "                                                     test_size =TEST_SIZE,\n",
    "                                                     stratify = y,\n",
    "                                                     random_state =RANDOM_STATE)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h4>Perceptron</h4>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [],
   "source": [
    "## one hidden layer\n",
    "# z = w0+x1*w1+x2*w2\n",
    "# z>= 0 a = 1\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Activation Function\n",
    "## Sigmoid"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [],
   "source": [
    "def fn_sigmoid(z):\n",
    "    return 1.0 / (1 + np.exp(-z))\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[0.26894142, 0.5       , 0.73105858],\n",
       "       [0.        , 0.5       , 1.        ]])"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "fn_sigmoid(np.array([[-1.,0.,1.0],[-np.inf,0,np.inf]]))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "###  TanH Activation "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [],
   "source": [
    "def fn_actv(z):\n",
    "    return np.tanh(z)\n",
    "\n",
    "def fn_actv_prime(a):\n",
    "    return 1.0 - np.tanh(a)**2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[-0.76159416,  0.        ,  0.76159416],\n",
       "       [-1.        ,  0.        ,  1.        ]])"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "fn_actv(np.array([[-1.,0.,1.0],[-np.inf,0,np.inf]]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.41997434161402614"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "1 -np.tanh(-1)**2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [],
   "source": [
    "def predict(model,X_p):\n",
    "    W1, b1 ,W2,b2 = model['W1'],model['b1'],model['W2'],model['b2']\n",
    "    \n",
    " ## forward propagation\n",
    "    z1 =X_p.dot(W1)+b1 #layer1,aggregation function\n",
    "    a1 = fn_actv(z1)  # Activations\n",
    "\n",
    "    z2 =a1.dot(W2)+b2  #layer2,aggregation function\n",
    "    a2 = fn_actv(z2)   # Activations\n",
    "    \n",
    "    return a2>=0.5  # will return True ? False\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [],
   "source": [
    "def calculate_loss(model, X_l , y_l):\n",
    "    \n",
    "    W1, b1 ,W2,b2 = model['W1'],model['b1'],model['W2'],model['b2']\n",
    "    \n",
    "    m = X_l.shape[0]\n",
    "    \n",
    " ## forward propagation\n",
    "    z1 =X_l.dot(W1)+b1 #layer1,aggregation function\n",
    "    a1 = fn_actv(z1)  # Activations\n",
    "\n",
    "    z2 =a1.dot(W2)+b2  #layer2,aggregation function\n",
    "    a2 = fn_sigmoid(z2)   # Activations\n",
    "\n",
    "    data_loss = -(y_l * np.log(a2)).sum()\n",
    "\n",
    "    return data_loss /m"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[1, 2, 3],\n",
       "       [4, 5, 6],\n",
       "       [7, 8, 9]])"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "(3, 3)"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "array([12, 15, 18])"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "(3,)"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "dz2 = np.array([[1,2,3],[4,5,6],[7,8,9]])\n",
    "display(dz2, dz2.shape)\n",
    "sum_dz = np.sum(dz2, axis=0)\n",
    "display(sum_dz, sum_dz.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [],
   "source": [
    "def build_model(nn_hdim,X_t, y_t, alpha = ALPHA, epochs =EPOCHS):\n",
    "    '''\n",
    "    Args:\n",
    "        nn_hdim: int : number of nodes in hidden layer\n",
    "        X_t: np.array : train features\n",
    "        y_t: np.array : train labels\n",
    "        alpha : float : ;earning rate\n",
    "        epochs: integer number of epochs\n",
    "    Return:\n",
    "        model dict\n",
    "    '''\n",
    "    \n",
    "    m , nn_input_dim = X_t.shape\n",
    "    nn_output_dim = y_t.shape[1]\n",
    "\n",
    "    W1 = np.random.rand(nn_input_dim,nn_hdim) / np.sqrt(nn_input_dim)\n",
    "    W2 = np.random.rand(nn_hdim,nn_output_dim) / np.sqrt(nn_hdim)\n",
    "\n",
    "    b1 = np.zeros((1,nn_hdim))\n",
    "    b2 = np.zeros((1,nn_output_dim))\n",
    "\n",
    "    model = {'W1':W1,\n",
    "             'b1':b1,\n",
    "             'W2':W2,\n",
    "             'b2':b2}\n",
    "\n",
    "    curr_loss = 0\n",
    "\n",
    "    loss =[]\n",
    "    epoch=[]\n",
    "\n",
    "    for i in range(epochs):\n",
    "\n",
    "        ## forward propogation\n",
    "        ## Layer 1\n",
    "        z1 =X_t.dot(W1)+b1 #layer1,aggregation function\n",
    "        a1 = fn_actv(z1)  # Activations\n",
    "        \n",
    "        ## Layer 2\n",
    "        z2 =a1.dot(W2)+b2  #layer2,aggregation function\n",
    "        a2 = fn_sigmoid(z2)   # Activations\n",
    "\n",
    "        ## Back propogation\n",
    "        dz2 =a2  - y_t\n",
    "        dW2 =(a1.T).dot(dz2)\n",
    "        assert (W2.shape == dW2.shape), f'Shape W2:{W2.shape} amd dW2 : {dW2.shape}'\n",
    "\n",
    "        db2 = np.sum(dz2, axis=0, keepdims=True)\n",
    "        assert (b2.shape == db2.shape), f'Shape b2:{b2.shape} amd db2 : {db2.shape}'\n",
    "\n",
    "        da1 = dz2.dot(W2.T)\n",
    "        assert (a1.shape == da1.shape), f'Shape a1:{a1.shape} amd da1 : {da1.shape}'\n",
    "\n",
    "        dz1 = da1 * fn_actv_prime(z1)\n",
    "        assert (z1.shape == dz1.shape), f'Shape z1:{z1.shape} amd dz1 : {dz1.shape}'\n",
    "\n",
    "        dW1 = (X_t.T).dot(dz1)\n",
    "        assert (W1.shape == dW1.shape), f'Shape W1:{W1.shape} amd dW1 : {dW1.shape}'\n",
    "\n",
    "        db1 = np.sum(dz1,axis =0, keepdims= True)\n",
    "        assert (b1.shape == db1.shape), f'Shape b1:{b1.shape} amd db1 : {db1.shape}'\n",
    "\n",
    "        W1 += -alpha * dW1 /m\n",
    "        W2 += -alpha * dW2 /m\n",
    "        b1 += -alpha * db1 /m\n",
    "        b2 += -alpha * db2 /m\n",
    "\n",
    "        model = {'W1':W1,\n",
    "                 'b1':b1,\n",
    "                 'W2':W2,\n",
    "                 'b2':b2}\n",
    "\n",
    "        if i%100 ==0:\n",
    "            curr_loss =calculate_loss(model=model,X_l=X_t,y_l=y_t)\n",
    "            loss.append(curr_loss)\n",
    "            epoch.append(i)\n",
    "\n",
    "        if i%100 ==0:\n",
    "           print (f'Loss after {i} epoch : {curr_loss:0.4f}')\n",
    "\n",
    "    loss_hist['loss'] =loss\n",
    "    loss_hist['epoch'] =epoch\n",
    "\n",
    "\n",
    "    return model\n",
    "            "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(800, 1)"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_train = y_train.reshape(-1,1)\n",
    "y_train.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [],
   "source": [
    "loss_hist ={}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Loss after 0 epoch : 0.2823\n",
      "Loss after 100 epoch : 0.2456\n",
      "Loss after 200 epoch : 0.1849\n",
      "Loss after 300 epoch : 0.1591\n",
      "Loss after 400 epoch : 0.1516\n",
      "Loss after 500 epoch : 0.1495\n",
      "Loss after 600 epoch : 0.1488\n",
      "Loss after 700 epoch : 0.1485\n",
      "Loss after 800 epoch : 0.1483\n",
      "Loss after 900 epoch : 0.1481\n",
      "Loss after 1000 epoch : 0.1479\n",
      "Loss after 1100 epoch : 0.1477\n",
      "Loss after 1200 epoch : 0.1474\n",
      "Loss after 1300 epoch : 0.1469\n",
      "Loss after 1400 epoch : 0.1461\n",
      "Loss after 1500 epoch : 0.1445\n",
      "Loss after 1600 epoch : 0.1417\n",
      "Loss after 1700 epoch : 0.1376\n",
      "Loss after 1800 epoch : 0.1324\n",
      "Loss after 1900 epoch : 0.1265\n",
      "Loss after 2000 epoch : 0.1206\n",
      "Loss after 2100 epoch : 0.1150\n",
      "Loss after 2200 epoch : 0.1097\n",
      "Loss after 2300 epoch : 0.1050\n",
      "Loss after 2400 epoch : 0.1007\n",
      "Loss after 2500 epoch : 0.0968\n",
      "Loss after 2600 epoch : 0.0933\n",
      "Loss after 2700 epoch : 0.0902\n",
      "Loss after 2800 epoch : 0.0873\n",
      "Loss after 2900 epoch : 0.0846\n",
      "Loss after 3000 epoch : 0.0821\n",
      "Loss after 3100 epoch : 0.0797\n",
      "Loss after 3200 epoch : 0.0774\n",
      "Loss after 3300 epoch : 0.0752\n",
      "Loss after 3400 epoch : 0.0731\n",
      "Loss after 3500 epoch : 0.0709\n",
      "Loss after 3600 epoch : 0.0687\n",
      "Loss after 3700 epoch : 0.0664\n",
      "Loss after 3800 epoch : 0.0642\n",
      "Loss after 3900 epoch : 0.0620\n",
      "Loss after 4000 epoch : 0.0598\n",
      "Loss after 4100 epoch : 0.0578\n",
      "Loss after 4200 epoch : 0.0558\n",
      "Loss after 4300 epoch : 0.0539\n",
      "Loss after 4400 epoch : 0.0522\n",
      "Loss after 4500 epoch : 0.0506\n",
      "Loss after 4600 epoch : 0.0491\n",
      "Loss after 4700 epoch : 0.0478\n",
      "Loss after 4800 epoch : 0.0466\n",
      "Loss after 4900 epoch : 0.0454\n",
      "Loss after 5000 epoch : 0.0444\n",
      "Loss after 5100 epoch : 0.0434\n",
      "Loss after 5200 epoch : 0.0425\n",
      "Loss after 5300 epoch : 0.0417\n",
      "Loss after 5400 epoch : 0.0410\n",
      "Loss after 5500 epoch : 0.0403\n",
      "Loss after 5600 epoch : 0.0396\n",
      "Loss after 5700 epoch : 0.0391\n",
      "Loss after 5800 epoch : 0.0385\n",
      "Loss after 5900 epoch : 0.0380\n",
      "Loss after 6000 epoch : 0.0375\n",
      "Loss after 6100 epoch : 0.0371\n",
      "Loss after 6200 epoch : 0.0367\n",
      "Loss after 6300 epoch : 0.0363\n",
      "Loss after 6400 epoch : 0.0359\n",
      "Loss after 6500 epoch : 0.0356\n",
      "Loss after 6600 epoch : 0.0352\n",
      "Loss after 6700 epoch : 0.0349\n",
      "Loss after 6800 epoch : 0.0347\n",
      "Loss after 6900 epoch : 0.0344\n",
      "Loss after 7000 epoch : 0.0341\n",
      "Loss after 7100 epoch : 0.0339\n",
      "Loss after 7200 epoch : 0.0337\n",
      "Loss after 7300 epoch : 0.0334\n",
      "Loss after 7400 epoch : 0.0332\n",
      "Loss after 7500 epoch : 0.0331\n",
      "Loss after 7600 epoch : 0.0329\n",
      "Loss after 7700 epoch : 0.0327\n",
      "Loss after 7800 epoch : 0.0325\n",
      "Loss after 7900 epoch : 0.0324\n",
      "Loss after 8000 epoch : 0.0322\n",
      "Loss after 8100 epoch : 0.0321\n",
      "Loss after 8200 epoch : 0.0319\n",
      "Loss after 8300 epoch : 0.0318\n",
      "Loss after 8400 epoch : 0.0317\n",
      "Loss after 8500 epoch : 0.0316\n",
      "Loss after 8600 epoch : 0.0314\n",
      "Loss after 8700 epoch : 0.0313\n",
      "Loss after 8800 epoch : 0.0312\n",
      "Loss after 8900 epoch : 0.0311\n",
      "Loss after 9000 epoch : 0.0310\n",
      "Loss after 9100 epoch : 0.0309\n",
      "Loss after 9200 epoch : 0.0308\n",
      "Loss after 9300 epoch : 0.0308\n",
      "Loss after 9400 epoch : 0.0307\n",
      "Loss after 9500 epoch : 0.0306\n",
      "Loss after 9600 epoch : 0.0305\n",
      "Loss after 9700 epoch : 0.0304\n",
      "Loss after 9800 epoch : 0.0304\n",
      "Loss after 9900 epoch : 0.0303\n",
      "Loss after 10000 epoch : 0.0302\n",
      "Loss after 10100 epoch : 0.0302\n",
      "Loss after 10200 epoch : 0.0301\n",
      "Loss after 10300 epoch : 0.0301\n",
      "Loss after 10400 epoch : 0.0300\n",
      "Loss after 10500 epoch : 0.0299\n",
      "Loss after 10600 epoch : 0.0299\n",
      "Loss after 10700 epoch : 0.0298\n",
      "Loss after 10800 epoch : 0.0298\n",
      "Loss after 10900 epoch : 0.0297\n",
      "Loss after 11000 epoch : 0.0297\n",
      "Loss after 11100 epoch : 0.0296\n",
      "Loss after 11200 epoch : 0.0296\n",
      "Loss after 11300 epoch : 0.0296\n",
      "Loss after 11400 epoch : 0.0295\n",
      "Loss after 11500 epoch : 0.0295\n",
      "Loss after 11600 epoch : 0.0294\n",
      "Loss after 11700 epoch : 0.0294\n",
      "Loss after 11800 epoch : 0.0294\n",
      "Loss after 11900 epoch : 0.0293\n",
      "Loss after 12000 epoch : 0.0293\n",
      "Loss after 12100 epoch : 0.0293\n",
      "Loss after 12200 epoch : 0.0292\n",
      "Loss after 12300 epoch : 0.0292\n",
      "Loss after 12400 epoch : 0.0292\n",
      "Loss after 12500 epoch : 0.0291\n",
      "Loss after 12600 epoch : 0.0291\n",
      "Loss after 12700 epoch : 0.0291\n",
      "Loss after 12800 epoch : 0.0291\n",
      "Loss after 12900 epoch : 0.0290\n",
      "Loss after 13000 epoch : 0.0290\n",
      "Loss after 13100 epoch : 0.0290\n",
      "Loss after 13200 epoch : 0.0289\n",
      "Loss after 13300 epoch : 0.0289\n",
      "Loss after 13400 epoch : 0.0289\n",
      "Loss after 13500 epoch : 0.0289\n",
      "Loss after 13600 epoch : 0.0289\n",
      "Loss after 13700 epoch : 0.0288\n",
      "Loss after 13800 epoch : 0.0288\n",
      "Loss after 13900 epoch : 0.0288\n",
      "Loss after 14000 epoch : 0.0288\n",
      "Loss after 14100 epoch : 0.0288\n",
      "Loss after 14200 epoch : 0.0287\n",
      "Loss after 14300 epoch : 0.0287\n",
      "Loss after 14400 epoch : 0.0287\n",
      "Loss after 14500 epoch : 0.0287\n",
      "Loss after 14600 epoch : 0.0287\n",
      "Loss after 14700 epoch : 0.0287\n",
      "Loss after 14800 epoch : 0.0286\n",
      "Loss after 14900 epoch : 0.0286\n",
      "Loss after 15000 epoch : 0.0286\n",
      "Loss after 15100 epoch : 0.0286\n",
      "Loss after 15200 epoch : 0.0286\n",
      "Loss after 15300 epoch : 0.0286\n",
      "Loss after 15400 epoch : 0.0286\n",
      "Loss after 15500 epoch : 0.0285\n",
      "Loss after 15600 epoch : 0.0285\n",
      "Loss after 15700 epoch : 0.0285\n",
      "Loss after 15800 epoch : 0.0285\n",
      "Loss after 15900 epoch : 0.0285\n",
      "Loss after 16000 epoch : 0.0285\n",
      "Loss after 16100 epoch : 0.0285\n",
      "Loss after 16200 epoch : 0.0285\n",
      "Loss after 16300 epoch : 0.0285\n",
      "Loss after 16400 epoch : 0.0285\n",
      "Loss after 16500 epoch : 0.0284\n",
      "Loss after 16600 epoch : 0.0284\n",
      "Loss after 16700 epoch : 0.0284\n",
      "Loss after 16800 epoch : 0.0284\n",
      "Loss after 16900 epoch : 0.0284\n",
      "Loss after 17000 epoch : 0.0284\n",
      "Loss after 17100 epoch : 0.0284\n",
      "Loss after 17200 epoch : 0.0284\n",
      "Loss after 17300 epoch : 0.0284\n",
      "Loss after 17400 epoch : 0.0284\n",
      "Loss after 17500 epoch : 0.0284\n",
      "Loss after 17600 epoch : 0.0284\n",
      "Loss after 17700 epoch : 0.0283\n",
      "Loss after 17800 epoch : 0.0283\n",
      "Loss after 17900 epoch : 0.0283\n",
      "Loss after 18000 epoch : 0.0283\n",
      "Loss after 18100 epoch : 0.0283\n",
      "Loss after 18200 epoch : 0.0283\n",
      "Loss after 18300 epoch : 0.0283\n",
      "Loss after 18400 epoch : 0.0283\n",
      "Loss after 18500 epoch : 0.0283\n",
      "Loss after 18600 epoch : 0.0283\n",
      "Loss after 18700 epoch : 0.0283\n",
      "Loss after 18800 epoch : 0.0283\n",
      "Loss after 18900 epoch : 0.0283\n",
      "Loss after 19000 epoch : 0.0283\n",
      "Loss after 19100 epoch : 0.0283\n",
      "Loss after 19200 epoch : 0.0283\n",
      "Loss after 19300 epoch : 0.0283\n",
      "Loss after 19400 epoch : 0.0283\n",
      "Loss after 19500 epoch : 0.0283\n",
      "Loss after 19600 epoch : 0.0282\n",
      "Loss after 19700 epoch : 0.0282\n",
      "Loss after 19800 epoch : 0.0282\n",
      "Loss after 19900 epoch : 0.0282\n"
     ]
    }
   ],
   "source": [
    "model = build_model(4,X_train,y_train,ALPHA,EPOCHS)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='epoch'>"
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1500x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "pd.DataFrame(loss_hist).plot(x='epoch',y='loss')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "((2, 4), (4, 1), (1, 4))"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model['W1'].shape,model['W2'].shape,model['b1'].shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# training Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.9775"
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_pred = predict(model, X_train)\n",
    "accuracy_score(y_pred = y_pred, y_true = y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[394,   6],\n",
       "       [ 12, 388]], dtype=int64)"
      ]
     },
     "execution_count": 67,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cm = confusion_matrix(y_pred = y_pred, y_true = y_train)\n",
    "cm"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1500x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "disp = ConfusionMatrixDisplay(confusion_matrix=cm, display_labels = [0,1])\n",
    "\n",
    "disp.plot(cmap='Blues',colorbar=False)\n",
    "plt.grid()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# testing Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "metadata": {},
   "outputs": [
    {
     "ename": "ValueError",
     "evalue": "Found input variables with inconsistent numbers of samples: [100, 200]",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mValueError\u001b[0m                                Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[80], line 19\u001b[0m\n\u001b[0;32m     16\u001b[0m y_pred \u001b[38;5;241m=\u001b[39m predict(model, X_test)\n\u001b[0;32m     18\u001b[0m \u001b[38;5;66;03m# Correct usage of accuracy_score\u001b[39;00m\n\u001b[1;32m---> 19\u001b[0m accuracy \u001b[38;5;241m=\u001b[39m \u001b[43maccuracy_score\u001b[49m\u001b[43m(\u001b[49m\u001b[43my_true\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mdata_test\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43my_pred\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43my_pred\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m     20\u001b[0m \u001b[38;5;28mprint\u001b[39m(\u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mAccuracy: \u001b[39m\u001b[38;5;132;01m{\u001b[39;00maccuracy\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m\"\u001b[39m)\n\u001b[0;32m     22\u001b[0m \u001b[38;5;66;03m# Calculate confusion matrix\u001b[39;00m\n",
      "File \u001b[1;32m~\\AppData\\Local\\anaconda3\\Lib\\site-packages\\sklearn\\utils\\_param_validation.py:213\u001b[0m, in \u001b[0;36mvalidate_params.<locals>.decorator.<locals>.wrapper\u001b[1;34m(*args, **kwargs)\u001b[0m\n\u001b[0;32m    207\u001b[0m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[0;32m    208\u001b[0m     \u001b[38;5;28;01mwith\u001b[39;00m config_context(\n\u001b[0;32m    209\u001b[0m         skip_parameter_validation\u001b[38;5;241m=\u001b[39m(\n\u001b[0;32m    210\u001b[0m             prefer_skip_nested_validation \u001b[38;5;129;01mor\u001b[39;00m global_skip_validation\n\u001b[0;32m    211\u001b[0m         )\n\u001b[0;32m    212\u001b[0m     ):\n\u001b[1;32m--> 213\u001b[0m         \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mfunc\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m    214\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m InvalidParameterError \u001b[38;5;28;01mas\u001b[39;00m e:\n\u001b[0;32m    215\u001b[0m     \u001b[38;5;66;03m# When the function is just a wrapper around an estimator, we allow\u001b[39;00m\n\u001b[0;32m    216\u001b[0m     \u001b[38;5;66;03m# the function to delegate validation to the estimator, but we replace\u001b[39;00m\n\u001b[0;32m    217\u001b[0m     \u001b[38;5;66;03m# the name of the estimator by the name of the function in the error\u001b[39;00m\n\u001b[0;32m    218\u001b[0m     \u001b[38;5;66;03m# message to avoid confusion.\u001b[39;00m\n\u001b[0;32m    219\u001b[0m     msg \u001b[38;5;241m=\u001b[39m re\u001b[38;5;241m.\u001b[39msub(\n\u001b[0;32m    220\u001b[0m         \u001b[38;5;124mr\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mparameter of \u001b[39m\u001b[38;5;124m\\\u001b[39m\u001b[38;5;124mw+ must be\u001b[39m\u001b[38;5;124m\"\u001b[39m,\n\u001b[0;32m    221\u001b[0m         \u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mparameter of \u001b[39m\u001b[38;5;132;01m{\u001b[39;00mfunc\u001b[38;5;241m.\u001b[39m\u001b[38;5;18m__qualname__\u001b[39m\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m must be\u001b[39m\u001b[38;5;124m\"\u001b[39m,\n\u001b[0;32m    222\u001b[0m         \u001b[38;5;28mstr\u001b[39m(e),\n\u001b[0;32m    223\u001b[0m     )\n",
      "File \u001b[1;32m~\\AppData\\Local\\anaconda3\\Lib\\site-packages\\sklearn\\metrics\\_classification.py:213\u001b[0m, in \u001b[0;36maccuracy_score\u001b[1;34m(y_true, y_pred, normalize, sample_weight)\u001b[0m\n\u001b[0;32m    147\u001b[0m \u001b[38;5;250m\u001b[39m\u001b[38;5;124;03m\"\"\"Accuracy classification score.\u001b[39;00m\n\u001b[0;32m    148\u001b[0m \n\u001b[0;32m    149\u001b[0m \u001b[38;5;124;03mIn multilabel classification, this function computes subset accuracy:\u001b[39;00m\n\u001b[1;32m   (...)\u001b[0m\n\u001b[0;32m    209\u001b[0m \u001b[38;5;124;03m0.5\u001b[39;00m\n\u001b[0;32m    210\u001b[0m \u001b[38;5;124;03m\"\"\"\u001b[39;00m\n\u001b[0;32m    212\u001b[0m \u001b[38;5;66;03m# Compute accuracy for each possible representation\u001b[39;00m\n\u001b[1;32m--> 213\u001b[0m y_type, y_true, y_pred \u001b[38;5;241m=\u001b[39m \u001b[43m_check_targets\u001b[49m\u001b[43m(\u001b[49m\u001b[43my_true\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43my_pred\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m    214\u001b[0m check_consistent_length(y_true, y_pred, sample_weight)\n\u001b[0;32m    215\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m y_type\u001b[38;5;241m.\u001b[39mstartswith(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mmultilabel\u001b[39m\u001b[38;5;124m\"\u001b[39m):\n",
      "File \u001b[1;32m~\\AppData\\Local\\anaconda3\\Lib\\site-packages\\sklearn\\metrics\\_classification.py:85\u001b[0m, in \u001b[0;36m_check_targets\u001b[1;34m(y_true, y_pred)\u001b[0m\n\u001b[0;32m     58\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21m_check_targets\u001b[39m(y_true, y_pred):\n\u001b[0;32m     59\u001b[0m \u001b[38;5;250m    \u001b[39m\u001b[38;5;124;03m\"\"\"Check that y_true and y_pred belong to the same classification task.\u001b[39;00m\n\u001b[0;32m     60\u001b[0m \n\u001b[0;32m     61\u001b[0m \u001b[38;5;124;03m    This converts multiclass or binary types to a common shape, and raises a\u001b[39;00m\n\u001b[1;32m   (...)\u001b[0m\n\u001b[0;32m     83\u001b[0m \u001b[38;5;124;03m    y_pred : array or indicator matrix\u001b[39;00m\n\u001b[0;32m     84\u001b[0m \u001b[38;5;124;03m    \"\"\"\u001b[39;00m\n\u001b[1;32m---> 85\u001b[0m     \u001b[43mcheck_consistent_length\u001b[49m\u001b[43m(\u001b[49m\u001b[43my_true\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43my_pred\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m     86\u001b[0m     type_true \u001b[38;5;241m=\u001b[39m type_of_target(y_true, input_name\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124my_true\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[0;32m     87\u001b[0m     type_pred \u001b[38;5;241m=\u001b[39m type_of_target(y_pred, input_name\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124my_pred\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n",
      "File \u001b[1;32m~\\AppData\\Local\\anaconda3\\Lib\\site-packages\\sklearn\\utils\\validation.py:457\u001b[0m, in \u001b[0;36mcheck_consistent_length\u001b[1;34m(*arrays)\u001b[0m\n\u001b[0;32m    455\u001b[0m uniques \u001b[38;5;241m=\u001b[39m np\u001b[38;5;241m.\u001b[39munique(lengths)\n\u001b[0;32m    456\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mlen\u001b[39m(uniques) \u001b[38;5;241m>\u001b[39m \u001b[38;5;241m1\u001b[39m:\n\u001b[1;32m--> 457\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\n\u001b[0;32m    458\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mFound input variables with inconsistent numbers of samples: \u001b[39m\u001b[38;5;132;01m%r\u001b[39;00m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m    459\u001b[0m         \u001b[38;5;241m%\u001b[39m [\u001b[38;5;28mint\u001b[39m(l) \u001b[38;5;28;01mfor\u001b[39;00m l \u001b[38;5;129;01min\u001b[39;00m lengths]\n\u001b[0;32m    460\u001b[0m     )\n",
      "\u001b[1;31mValueError\u001b[0m: Found input variables with inconsistent numbers of samples: [100, 200]"
     ]
    }
   ],
   "source": [
    "#calculate accuracy\n",
    "\n",
    "# y_pred = predict(model, X_test)\n",
    "# print(accuracy_score(y_pred = predictions, y_true=data_test))\n",
    "\n",
    "# #calculate confusion\n",
    "# cm= confusion_matrix(y_pred = predictions, y_true=data_test)\n",
    "\n",
    "# disp = ConfusionMatrixDisplay(confusion_matrix=cm, display_labels = [0,1])\n",
    "\n",
    "# disp.plot(cmap='Blues',colorbar=False)\n",
    "# plt.grid()\n",
    "# plt.show()\n",
    "\n",
    "# Make predictions using the model\n",
    "y_pred = predict(model, X_test)\n",
    "\n",
    "# Correct usage of accuracy_score\n",
    "accuracy = accuracy_score(y_true=data_test, y_pred=y_pred)\n",
    "print(f\"Accuracy: {accuracy}\")\n",
    "\n",
    "# Calculate confusion matrix\n",
    "cm = confusion_matrix(y_true=data_test, y_pred=y_pred)\n",
    "\n",
    "# Display confusion matrix\n",
    "disp = ConfusionMatrixDisplay(confusion_matrix=cm, display_labels=[0, 1])\n",
    "disp.plot(cmap='Blues', colorbar=False)\n",
    "\n",
    "# Show plot with grid\n",
    "plt.grid()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [],
   "source": [
    "#weights,error=train_weights(data_train,ALPHA,EPOCHS)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "fn_plot_decision_boundary(predict,data_train,weights)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "disp = ConfusionMatrixDisplay(confusion_matrix=cm, display_labels = [0,1])\n",
    "\n",
    "disp.plot(cmap='Blues',colorbar=False)\n",
    "plt.grid()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'weights' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[84], line 3\u001b[0m\n\u001b[0;32m      1\u001b[0m predictions \u001b[38;5;241m=\u001b[39m[] \u001b[38;5;66;03m# to store %predictons\u001b[39;00m\n\u001b[0;32m      2\u001b[0m \u001b[38;5;28;01mfor\u001b[39;00m row \u001b[38;5;129;01min\u001b[39;00m data_test: \u001b[38;5;66;03m# iterate over rows\u001b[39;00m\n\u001b[1;32m----> 3\u001b[0m     prediction \u001b[38;5;241m=\u001b[39m predict(row , \u001b[43mweights\u001b[49m) \u001b[38;5;66;03m# make predictions\u001b[39;00m\n\u001b[0;32m      4\u001b[0m     pred \u001b[38;5;241m=\u001b[39m \u001b[38;5;241m0\u001b[39m\n\u001b[0;32m      5\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m(prediction \u001b[38;5;241m>\u001b[39m\u001b[38;5;241m=\u001b[39m \u001b[38;5;241m0.5\u001b[39m):\n",
      "\u001b[1;31mNameError\u001b[0m: name 'weights' is not defined"
     ]
    }
   ],
   "source": [
    "predictions =[] # to store %predictons\n",
    "for row in data_test: # iterate over rows\n",
    "    prediction = predict(row , weights) # make predictions\n",
    "    pred = 0\n",
    "    if(prediction >= 0.5):\n",
    "        pred = 1\n",
    "    predictions.append(pred)  # collect in a list\n",
    "\n",
    "#calculate accuracy\n",
    "print(f'Test Accuracy:{accuracy_score(y_pred = predictions, y_true=data_test[:,-1])}')\n",
    "\n",
    "#calculate confusion\n",
    "cm= confusion_matrix(y_true=data_test[:,-1],y_pred=predictions)\n",
    "\n",
    "disp = ConfusionMatrixDisplay(confusion_matrix=cm, display_labels = [0,1])\n",
    "\n",
    "disp.plot(cmap='Blues',colorbar=False)\n",
    "plt.grid()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "metadata": {},
   "outputs": [
    {
     "ename": "TypeError",
     "evalue": "<lambda>() takes 1 positional argument but 2 were given",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[82], line 1\u001b[0m\n\u001b[1;32m----> 1\u001b[0m \u001b[43mfn_plot_decision_boundary\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;28;43;01mlambda\u001b[39;49;00m\u001b[43m \u001b[49m\u001b[43mx\u001b[49m\u001b[43m:\u001b[49m\u001b[43mpredict\u001b[49m\u001b[43m(\u001b[49m\u001b[43mmodel\u001b[49m\u001b[43m,\u001b[49m\u001b[43mx\u001b[49m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\u001b[43mX_train\u001b[49m\u001b[43m,\u001b[49m\u001b[43my_train\u001b[49m\u001b[43m)\u001b[49m\n",
      "Cell \u001b[1;32mIn[8], line 35\u001b[0m, in \u001b[0;36mfn_plot_decision_boundary\u001b[1;34m(predict, X, wts)\u001b[0m\n\u001b[0;32m     30\u001b[0m \u001b[38;5;66;03m# Iterate over rows\u001b[39;00m\n\u001b[0;32m     31\u001b[0m \u001b[38;5;28;01mfor\u001b[39;00m row \u001b[38;5;129;01min\u001b[39;00m (XX):\n\u001b[0;32m     32\u001b[0m     \n\u001b[0;32m     33\u001b[0m     \u001b[38;5;66;03m###change for sigmoid function\u001b[39;00m\n\u001b[0;32m     34\u001b[0m     \u001b[38;5;66;03m#--------------------------------\u001b[39;00m\n\u001b[1;32m---> 35\u001b[0m     a\u001b[38;5;241m=\u001b[39m\u001b[43mpredict\u001b[49m\u001b[43m(\u001b[49m\u001b[43mrow\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mwts\u001b[49m\u001b[43m)\u001b[49m \u001b[38;5;66;03m# this is a float between [0,1]\u001b[39;00m\n\u001b[0;32m     36\u001b[0m     y_p \u001b[38;5;241m=\u001b[39m\u001b[38;5;241m0\u001b[39m\n\u001b[0;32m     37\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m y_p\u001b[38;5;241m>\u001b[39m\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m0.5\u001b[39m:\n",
      "\u001b[1;31mTypeError\u001b[0m: <lambda>() takes 1 positional argument but 2 were given"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fn_plot_decision_boundary(lambda x:predict(model,x),X_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
